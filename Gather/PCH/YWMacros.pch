//
//  YWMacros.pch
//  Gather
//
//  Created by apple on 2018/3/27.
//  Copyright © 2018年 Apple. All rights reserved.

//  APP所有的宏常量 仅限于 #define

#ifndef YWMacros_pch
#define YWMacros_pch

/// 应用名称
#define YW_APP_NAME    ([[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleName"])

/// 应用版本号
#define YW_APP_VERSION ([[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleShortVersionString"])

/// 应用build
#define YW_APP_BUILD   ([[[NSBundle mainBundle] infoDictionary] objectForKey:@"CFBundleVersion"])

// 打印方法
#define YWLogFunc NSLog(@"%s", __func__)

// 打印请求错误信息
#define YWLogError(error) NSLog(@"Error: %@", error)

// 销毁打印
#define YWDealloc NSLog(@"\n =========+++ %@  销毁了 +++======== \n",[self class])

#define YWLogLastError(db) NSLog(@"lastError: %@, lastErrorCode: %d, lastErrorMessage: %@", [db lastError], [db lastErrorCode], [db lastErrorMessage]);

/// 类型相关
#define YW_IS_IPAD (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
#define YW_IS_IPHONE (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
#define YW_IS_RETINA ([[UIScreen mainScreen] scale] >= 2.0)

/// 屏幕尺寸相关
#define YW_SCREEN_WIDTH  ([[UIScreen mainScreen] bounds].size.width)
#define YW_SCREEN_HEIGHT ([[UIScreen mainScreen] bounds].size.height)
#define YW_SCREEN_BOUNDS ([[UIScreen mainScreen] bounds])
#define YW_SCREEN_MAX_LENGTH (MAX(YW_SCREEN_WIDTH, YW_SCREEN_HEIGHT))
#define YW_SCREEN_MIN_LENGTH (MIN(YW_SCREEN_WIDTH, YW_SCREEN_HEIGHT))

/// 手机类型相关
#define YW_IS_IPHONE_4_OR_LESS  (YW_IS_IPHONE && YW_SCREEN_MAX_LENGTH  < 568.0)
#define YW_IS_IPHONE_5          (YW_IS_IPHONE && YW_SCREEN_MAX_LENGTH == 568.0)
#define YW_IS_IPHONE_6          (YW_IS_IPHONE && YW_SCREEN_MAX_LENGTH == 667.0)
#define YW_IS_IPHONE_6P         (YW_IS_IPHONE && YW_SCREEN_MAX_LENGTH == 736.0)
#define YW_IS_IPHONE_X          (YW_IS_IPHONE && YW_SCREEN_MAX_LENGTH == 812.0)


/// 导航条高度
#define YW_APPLICATION_TOP_BAR_HEIGHT (YW_IS_IPHONE_X?88.0f:64.0f)
/// tabBar高度
#define YW_APPLICATION_TAB_BAR_HEIGHT (YW_IS_IPHONE_X?83.0f:49.0f)
/// 工具条高度 (常见的高度)
#define YW_APPLICATION_TOOL_BAR_HEIGHT_44  44.0f
#define YW_APPLICATION_TOOL_BAR_HEIGHT_49  49.0f
/// 状态栏高度
#define YW_APPLICATION_STATUS_BAR_HEIGHT (YW_IS_IPHONE_X?44:20.0f)

///------
/// iOS Version
///------
#define YWIOSVersion ([[[UIDevice currentDevice] systemVersion] floatValue])

#define YW_iOS7_VERSTION_LATER ([UIDevice currentDevice].systemVersion.floatValue >= 7.0)
#define YW_iOS8_VERSTION_LATER ([UIDevice currentDevice].systemVersion.floatValue >= 8.0)
#define YW_iOS9_VERSTION_LATER ([UIDevice currentDevice].systemVersion.floatValue >= 9.0)
#define YW_iOS10_VERSTION_LATER ([UIDevice currentDevice].systemVersion.floatValue >= 10.0)

#define YW_SYSTEM_VERSION_EQUAL_TO(v) ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedSame)
#define YW_SYSTEM_VERSION_GREATER_THAN(v) ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedDescending)
#define YW_SYSTEM_VERSION_GREATER_THAN_OR_EQUAL_TO(v) ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)
#define YW_SYSTEM_VERSION_LESS_THAN(v) ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] == NSOrderedAscending)
#define YW_SYSTEM_VERSION_LESS_THAN_OR_EQUAL_TO(v) ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedDescending)

// AppCaches 文件夹路径
#define YWCachesDirectory [NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES) lastObject]

// App DocumentDirectory 文件夹路径
#define YWDocumentDirectory [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory,NSUserDomainMask, YES) lastObject]

/// 适配iPhone X + iOS 11
#define  MHAdjustsScrollViewInsets_Never(__scrollView)\
do {\
_Pragma("clang diagnostic push")\
_Pragma("clang diagnostic ignored \"-Warc-performSelector-leaks\"")\
if ([__scrollView respondsToSelector:NSSelectorFromString(@"setContentInsetAdjustmentBehavior:")]) {\
NSMethodSignature *signature = [UIScrollView instanceMethodSignatureForSelector:@selector(setContentInsetAdjustmentBehavior:)];\
NSInvocation *invocation = [NSInvocation invocationWithMethodSignature:signature];\
NSInteger argument = 2;\
invocation.target = __scrollView;\
invocation.selector = @selector(setContentInsetAdjustmentBehavior:);\
[invocation setArgument:&argument atIndex:2];\
[invocation retainArguments];\
[invocation invoke];\
}\
_Pragma("clang diagnostic pop")\
} while (0)

// 是否为空对象
#define YWObjectIsNil(__object)  ((nil == __object) || [__object isKindOfClass:[NSNull class]])

// 字符串为空
#define YWStringIsEmpty(__string) ((__string.length == 0) || MHObjectIsNil(__string))

// 字符串不为空
#define YWStringIsNotEmpty(__string)  (!YWStringIsEmpty(__string))

// 数组为空
#define YWArrayIsEmpty(__array) ((YWObjectIsNil(__array)) || (__array.count==0))


/// AppDelegate
#define YWSharedAppDelegate ((AppDelegate *)[UIApplication sharedApplication].delegate)

/// ---- YYWebImage Option
/// 手动设置image
#define YWWebImageOptionManually (YYWebImageOptionAllowInvalidSSLCertificates|YYWebImageOptionAllowBackgroundTask|YYWebImageOptionSetImageWithFadeAnimation|YYWebImageOptionAvoidSetImage)


/// 自动设置Image
#define YWWebImageOptionAutomatic (YYWebImageOptionAllowInvalidSSLCertificates|YYWebImageOptionAllowBackgroundTask|YYWebImageOptionSetImageWithFadeAnimation)

#define Notification [NSNotificationCenter defaultCenter]

#define UserDefaults [NSUserDefaults standardUserDefaults]

#define ShareSelf(type)  __weak typeof(type) weakSelf = self

#define isValidString(string)  (string && [string isEqualToString:@""] == NO)

/** 版本号 (大于等于版本) */
#define IOS_SYSTEM_VERSION(v) ([[[UIDevice currentDevice] systemVersion] compare:v options:NSNumericSearch] != NSOrderedAscending)

/** 判断iPhoneX */
#define kDevice_Is_iPhoneX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)

/** 判断iPhone5 */
#define kDevice_Is_iPhone5_iPhone5S_iPhoneSE ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) : NO)

/** 基于6s 计算屏幕宽高比 **/
#define WIDTHFIT ([UIScreen mainScreen].bounds.size.width / 375.0f)
#define HEIGHTFIT ([UIScreen mainScreen].bounds.size.height / 667.0f)

// 根据rgbValue获取对应的颜色
#define RED_COLOR 0xfc5353//红色
#define YWColorFromRGB(rgbValue) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0 blue:((float)(rgbValue & 0xFF))/255.0 alpha:1.0]

#define YWColorFromRGBAlpha(rgbValue, a) [UIColor colorWithRed:((float)((rgbValue & 0xFF0000) >> 16))/255.0 green:((float)((rgbValue & 0xFF00) >> 8))/255.0 blue:((float)(rgbValue & 0xFF))/255.0 alpha:(a)]

// 颜色
#define YWColor(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1.0]

// 颜色+透明度
#define YWColorAlpha(r, g, b, a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:a]

/** 随机颜色(1) */
#define random(r, g, b, a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:(a)/255.0]

/** 随机颜色(2) */
#define randomColor random(arc4random_uniform(256), arc4random_uniform(256), arc4random_uniform(256), arc4random_uniform(256))

#endif /* YWMacros_pch */
